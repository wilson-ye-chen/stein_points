%%
% File: fscr_gp_test.m
%
% Purpose:
% Consider a particular point set X, where each row of X represents one
% set of hyperparameter values for a regression model. We are interested
% in the posterior over these hyperparameters. In particular we want to
% approximate the posterior with a point set generated by AdaMC.
%
% Date: November 21, 2017
%%

% Load the LIDAR data.
load('data_lidar.mat');
t = range;
y = logratio;
nObs = numel(y);

% GP score function
sigma = 0.2;
fu = @(X)fscr_gp(X, y, t, sigma, false);

% Number of points
nPt = 200;

% Symbolic variables
a = sym('a', [1, 2], 'real');
b = sym('b', [1, 2], 'real');

% IMQ kernel
k = (1 + (a - b) * (a - b)') .^ (-0.5);

% Generate point-sequence using AdaMc-IMQ
mu0 = [-1, -10];
Sigma0 = diag([8, 8]);
lb = [-5, -14];
ub = [6, -7];
% fmin = @(f, X)fmin_adares(f, X, 3, mu0, Sigma0, 1, 5, lb, ub, [], []);
fmin = @(f, X)fmin_adamc(f, X, 10, mu0, Sigma0, 1, 5, lb, ub, [], []);
fprintf('AdaMC-IMQ-%d...\n', nPt);
tic;
[X, s, nEval] = stein_greedy(2, fu, k, fmin, nPt, []);
toc;

% Get associated scores and density function handle
[D, fp] = fscr_gp(X, y, t, sigma, true);

% Compute numerical scores for debugging
DNum = numdiff(2, X, @(T)log(fp(T)), 1e-6);
figure();
plot(D, 'x');
hold on;
plot(DNum, 'o');

% Plot the (un-normalised) log-target
figure()
m = 100;
t1 = linspace(lb(1), ub(1), m)';
t2 = linspace(lb(2), ub(2), m)';
T = [repelem(t1, m), repmat(t2, m, 1)];
p = log(fp(T));
Z = reshape(p, m, m);
contour(t1, t2, Z, 'levelstep', 1);
xlabel('x_1');
ylabel('x_2');
title('Log-target + constant');

% Superimpose the particular point set and associated scores
hold on;
quiver(X(:, 1), X(:, 2), D(:, 1), D(:, 2), 'o');
